{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RefreshService from './RefreshService';\nimport { loginByJWT, logout } from '../pages/login/reducer';\nexport var REFRESH_STARTED = \"REFRESH_STARTED\";\nexport var REFRESH_SUCCESS = \"REFRESH_SUCCESS\";\nexport var REFRESH_FAILED = \"REFRESH_FAILED\";\nvar initialState = {\n  success: false,\n  failed: false,\n  loading: false\n};\nexport var refreshToken = function refreshToken(dispatch) {\n  dispatch(refresh.started());\n  return RefreshService.RefreshToken().then(function (response) {\n    dispatch(refresh.success());\n    loginByJWT(response.data, dispatch);\n    return Promise.resolve(response);\n  }).catch(function (err) {\n    dispatch(refresh.failed());\n    logout(dispatch);\n    return Promise.reject(err);\n  });\n};\nexport var refreshReducer = function refreshReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState = state;\n\n  switch (action.type) {\n    case 'REFRESH_STARTED':\n      {\n        newState = _objectSpread({}, initialState, {\n          loading: true\n        });\n        break;\n      }\n\n    case 'REFRESH_SUCCESS':\n      {\n        newState = _objectSpread({}, state, {\n          success: true,\n          loading: false\n        });\n        break;\n      }\n\n    case 'REFRESH_FAILED':\n      {\n        newState = _objectSpread({}, state, {\n          failed: true,\n          loading: false\n        });\n        break;\n      }\n\n    default:\n      {\n        return newState;\n      }\n  }\n\n  ;\n  return newState;\n};\nexport var refresh = {\n  started: function started() {\n    return {\n      type: REFRESH_STARTED\n    };\n  },\n  success: function success() {\n    return {\n      type: REFRESH_SUCCESS\n    };\n  },\n  failed: function failed(response) {\n    return {\n      type: REFRESH_FAILED // errors: response.data\n\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/SiteMeeting/MeetingWebsite/MeetingWebsite/Frontend/src/components/refreshToken/reducer.js"],"names":["RefreshService","loginByJWT","logout","REFRESH_STARTED","REFRESH_SUCCESS","REFRESH_FAILED","initialState","success","failed","loading","refreshToken","dispatch","refresh","started","RefreshToken","then","response","data","Promise","resolve","catch","err","reject","refreshReducer","state","action","newState","type"],"mappings":";;;;;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,wBAAjC;AAEA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACxCA,EAAAA,QAAQ,CAACC,OAAO,CAACC,OAAR,EAAD,CAAR;AACA,SAAOb,cAAc,CAACc,YAAf,GACFC,IADE,CACG,UAACC,QAAD,EAAc;AAChBL,IAAAA,QAAQ,CAACC,OAAO,CAACL,OAAR,EAAD,CAAR;AACAN,IAAAA,UAAU,CAACe,QAAQ,CAACC,IAAV,EAAgBN,QAAhB,CAAV;AACA,WAAOO,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,GALE,EAMFI,KANE,CAMI,UAACC,GAAD,EAAS;AACZV,IAAAA,QAAQ,CAACC,OAAO,CAACJ,MAAR,EAAD,CAAR;AACAN,IAAAA,MAAM,CAACS,QAAD,CAAN;AACA,WAAOO,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACH,GAVE,CAAP;AAWD,CAbM;AAeP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBlB,YAAyB;AAAA,MAAXmB,MAAW;AAC9D,MAAIC,QAAQ,GAAGF,KAAf;;AACA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAK,iBAAL;AAAwB;AACpBD,QAAAA,QAAQ,qBAAOpB,YAAP;AAAqBG,UAAAA,OAAO,EAAE;AAA9B,UAAR;AACA;AACH;;AACD,SAAK,iBAAL;AAAwB;AACpBiB,QAAAA,QAAQ,qBAAOF,KAAP;AAAcjB,UAAAA,OAAO,EAAE,IAAvB;AAA6BE,UAAAA,OAAO,EAAE;AAAtC,UAAR;AACA;AACH;;AACD,SAAK,gBAAL;AAAuB;AACnBiB,QAAAA,QAAQ,qBAAOF,KAAP;AAAchB,UAAAA,MAAM,EAAE,IAAtB;AAA4BC,UAAAA,OAAO,EAAE;AAArC,UAAR;AACA;AACH;;AACD;AAAS;AACL,eAAOiB,QAAP;AACH;AAfL;;AAgBC;AACD,SAAOA,QAAP;AACD,CApBM;AAsBP,OAAO,IAAMd,OAAO,GAAG;AACrBC,EAAAA,OAAO,EAAE,mBAAM;AACX,WAAO;AACHc,MAAAA,IAAI,EAAExB;AADH,KAAP;AAGH,GALoB;AAOrBI,EAAAA,OAAO,EAAE,mBAAM;AACX,WAAO;AACHoB,MAAAA,IAAI,EAAEvB;AADH,KAAP;AAGH,GAXoB;AAarBI,EAAAA,MAAM,EAAE,gBAACQ,QAAD,EAAc;AAClB,WAAO;AACHW,MAAAA,IAAI,EAAEtB,cADH,CAEH;;AAFG,KAAP;AAIH;AAlBoB,CAAhB","sourcesContent":["import RefreshService from './RefreshService'\r\nimport {loginByJWT, logout} from '../pages/login/reducer';\r\n\r\nexport const REFRESH_STARTED = \"REFRESH_STARTED\";\r\nexport const REFRESH_SUCCESS = \"REFRESH_SUCCESS\";\r\nexport const REFRESH_FAILED = \"REFRESH_FAILED\";\r\n\r\nconst initialState = {\r\n  success: false,\r\n  failed: false,\r\n  loading: false\r\n}\r\n\r\nexport const refreshToken = (dispatch) => {\r\n  dispatch(refresh.started())\r\n  return RefreshService.RefreshToken()\r\n      .then((response) => {\r\n          dispatch(refresh.success());\r\n          loginByJWT(response.data, dispatch);\r\n          return Promise.resolve(response);\r\n      })\r\n      .catch((err) => {\r\n          dispatch(refresh.failed());\r\n          logout(dispatch);\r\n          return Promise.reject(err);\r\n      })\r\n}\r\n\r\nexport const refreshReducer = (state = initialState, action) => {\r\n  let newState = state;\r\n  switch(action.type){\r\n      case 'REFRESH_STARTED': {\r\n          newState = {...initialState, loading: true };\r\n          break;\r\n      }\r\n      case 'REFRESH_SUCCESS': {\r\n          newState = {...state, success: true, loading: false };\r\n          break;\r\n      }\r\n      case 'REFRESH_FAILED': {\r\n          newState = {...state, failed: true, loading: false };\r\n          break;\r\n      }\r\n      default: {\r\n          return newState\r\n      }\r\n  };\r\n  return newState;\r\n}\r\n\r\nexport const refresh = {\r\n  started: () => {\r\n      return {\r\n          type: REFRESH_STARTED\r\n      }\r\n  },\r\n\r\n  success: () => {\r\n      return {\r\n          type: REFRESH_SUCCESS\r\n      }\r\n  },\r\n\r\n  failed: (response) => {\r\n      return {\r\n          type: REFRESH_FAILED,\r\n          // errors: response.data\r\n      }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}