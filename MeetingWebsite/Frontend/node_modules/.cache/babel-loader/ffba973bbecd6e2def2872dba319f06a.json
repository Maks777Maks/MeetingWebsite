{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\src\\\\containers\\\\adminLayout\\\\AdminSideBar.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // reactstrap components\n\nimport { Nav } from \"reactstrap\";\nvar ps;\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n\n    _this.linkOnClick = function () {\n      document.documentElement.classList.remove(\"nav-open\");\n    };\n\n    _this.activeRoute.bind(_assertThisInitialized(_this));\n\n    return _this;\n  } // verifies if routeName is the one active (in browser input)\n\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          rtlActive = _this$props.rtlActive,\n          logo = _this$props.logo;\n      var logoImg = null;\n      var logoText = null;\n\n      if (logo !== undefined) {\n        if (logo.outterLink !== undefined) {\n          logoImg = React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-mini\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"logo-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          })));\n          logoText = React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-normal\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, logo.text);\n        } else {\n          logoImg = React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-mini\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"logo-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })));\n          logoText = React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-normal\",\n            onClick: this.props.toggleSidebar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, logo.text);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"sidebar\",\n        data: bgColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, logoImg !== null || logoText !== null ? React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, logoImg, logoText) : null, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, routes.map(function (prop, key) {\n        if (prop.redirect) return null;\n        return React.createElement(\"li\", {\n          className: _this2.activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\"),\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          className: \"nav-link\",\n          activeClassName: \"active\",\n          onClick: _this2.props.toggleSidebar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, rtlActive ? prop.rtlName : prop.name)));\n      }))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/User/Desktop/SiteMeeting/MeetingWebsite/MeetingWebsite/Frontend/src/containers/adminLayout/AdminSideBar.js"],"names":["React","NavLink","Link","PropTypes","PerfectScrollbar","Nav","ps","Sidebar","props","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","toggleSidebar","imgSrc","text","innerLink","map","prop","key","redirect","path","pro","layout","icon","rtlName","name","Component","defaultProps","propTypes","bool","oneOf","arrayOf","object","shape","string","node"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav } from \"reactstrap\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n    }\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n    }\r\n    componentDidMount() {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            ps = new PerfectScrollbar(this.refs.sidebar, {\r\n                suppressScrollX: true,\r\n                suppressScrollY: false\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            ps.destroy();\r\n        }\r\n    }\r\n    linkOnClick = () => {\r\n        document.documentElement.classList.remove(\"nav-open\");\r\n    };\r\n    render() {\r\n        const { bgColor, routes, rtlActive, logo } = this.props;\r\n        let logoImg = null;\r\n        let logoText = null;\r\n        if (logo !== undefined) {\r\n            if (logo.outterLink !== undefined) {\r\n                logoImg = (\r\n                    <a\r\n                        href={logo.outterLink}\r\n                        className=\"simple-text logo-mini\"\r\n                        target=\"_blank\"\r\n                        onClick={this.props.toggleSidebar}\r\n                    >\r\n                        <div className=\"logo-img\">\r\n                            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n                        </div>\r\n                    </a>\r\n                );\r\n                logoText = (\r\n                    <a\r\n                        href={logo.outterLink}\r\n                        className=\"simple-text logo-normal\"\r\n                        target=\"_blank\"\r\n                        onClick={this.props.toggleSidebar}\r\n                    >\r\n                        {logo.text}\r\n                    </a>\r\n                );\r\n            } else {\r\n                logoImg = (\r\n                    <Link\r\n                        to={logo.innerLink}\r\n                        className=\"simple-text logo-mini\"\r\n                        onClick={this.props.toggleSidebar}\r\n                    >\r\n                        <div className=\"logo-img\">\r\n                            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n                        </div>\r\n                    </Link>\r\n                );\r\n                logoText = (\r\n                    <Link\r\n                        to={logo.innerLink}\r\n                        className=\"simple-text logo-normal\"\r\n                        onClick={this.props.toggleSidebar}\r\n                    >\r\n                        {logo.text}\r\n                    </Link>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"sidebar\" data={bgColor}>\r\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n                    {logoImg !== null || logoText !== null ? (\r\n                        <div className=\"logo\">\r\n                            {logoImg}\r\n                            {logoText}\r\n                        </div>\r\n                    ) : null}\r\n                    <Nav>\r\n                        {routes.map((prop, key) => {\r\n                            if (prop.redirect) return null;\r\n                            return (\r\n                                <li\r\n                                    className={\r\n                                        this.activeRoute(prop.path) +\r\n                                        (prop.pro ? \" active-pro\" : \"\")\r\n                                    }\r\n                                    key={key}\r\n                                >\r\n                                    <NavLink\r\n                                        to={prop.layout + prop.path}\r\n                                        className=\"nav-link\"\r\n                                        activeClassName=\"active\"\r\n                                        onClick={this.props.toggleSidebar}\r\n                                    >\r\n                                        <i className={prop.icon} />\r\n                                        <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                                    </NavLink>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </Nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n    rtlActive: false,\r\n    bgColor: \"primary\",\r\n    routes: [{}]\r\n};\r\n\r\nSidebar.propTypes = {\r\n    // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n    // insde the links of this component\r\n    rtlActive: PropTypes.bool,\r\n    bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\r\n    routes: PropTypes.arrayOf(PropTypes.object),\r\n    logo: PropTypes.shape({\r\n        // innerLink is for links that will direct the user within the app\r\n        // it will be rendered as <Link to=\"...\">...</Link> tag\r\n        innerLink: PropTypes.string,\r\n        // outterLink is for links that will direct the user outside the app\r\n        // it will be rendered as simple <a href=\"...\">...</a> tag\r\n        outterLink: PropTypes.string,\r\n        // the text of the logo\r\n        text: PropTypes.node,\r\n        // the image src of the logo\r\n        imgSrc: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}