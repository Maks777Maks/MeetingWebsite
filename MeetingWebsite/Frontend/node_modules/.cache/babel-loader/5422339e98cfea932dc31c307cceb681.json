{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\src\\\\index.js\";\nimport 'react-app-polyfill/ie9'; // For IE 9-11 support\n\nimport 'react-app-polyfill/stable'; // import 'react-app-polyfill/ie11'; // For IE 11 support\n\nimport './polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; //import { ConnectedRouter } from 'react-router-redux';\n\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; //import setAuthorizationToken from './utils/setAuthorizationToken';\n//import { setCurrentUser } from './actions/authActions';\n\nimport jwt from 'jsonwebtoken'; // Create browser history to use in the Redux store\n\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nvar history = createBrowserHistory({\n  basename: baseUrl\n}); // console.log('----history----',history);\n// Get the application-wide store instance, prepopulating with state from the server where available.\n\nvar initialState = window.initialReduxState;\nvar store = configureStore(history, initialState);\n\nif (localStorage.jwtToken) {\n  var token = localStorage.jwtToken;\n  var user = jwt.decode(token);\n\n  if (!Array.isArray(user.roles)) {\n    user.roles = Array.of(user.roles);\n  } // setAuthorizationToken(token);\n  // store.dispatch(setCurrentUser(user));\n\n}\n\nvar rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), rootElement); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/User/Desktop/SiteMeeting/MeetingWebsite/MeetingWebsite/Frontend/src/index.js"],"names":["React","ReactDOM","Provider","createBrowserHistory","configureStore","App","serviceWorker","jwt","baseUrl","document","getElementsByTagName","getAttribute","history","basename","initialState","window","initialReduxState","store","localStorage","jwtToken","token","user","decode","Array","isArray","roles","of","rootElement","getElementById","render","unregister"],"mappings":";AAAA,OAAO,wBAAP,C,CAAiC;;AACjC,OAAO,2BAAP,C,CACA;;AACA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAGA;;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAAzC,CAAsD,MAAtD,CAAhB;AACA,IAAMC,OAAO,GAAGT,oBAAoB,CAAC;AAAEU,EAAAA,QAAQ,EAAEL;AAAZ,CAAD,CAApC,C,CACA;AACA;;AACA,IAAMM,YAAY,GAAGC,MAAM,CAACC,iBAA5B;AACA,IAAMC,KAAK,GAAGb,cAAc,CAACQ,OAAD,EAAUE,YAAV,CAA5B;;AAEA,IAAGI,YAAY,CAACC,QAAhB,EAA0B;AACtB,MAAIC,KAAK,GAAGF,YAAY,CAACC,QAAzB;AACA,MAAIE,IAAI,GAAGd,GAAG,CAACe,MAAJ,CAAWF,KAAX,CAAX;;AACA,MAAI,CAACG,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACI,KAAnB,CAAL,EAAgC;AAC5BJ,IAAAA,IAAI,CAACI,KAAL,GAAaF,KAAK,CAACG,EAAN,CAASL,IAAI,CAACI,KAAd,CAAb;AACH,GALqB,CAMtB;AACA;;AACH;;AACD,IAAME,WAAW,GAAGlB,QAAQ,CAACmB,cAAT,CAAwB,MAAxB,CAApB;AAEA3B,QAAQ,CAAC4B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFR,CADJ,EAKiBU,WALjB,E,CAOA;AACA;AACA;;AACArB,aAAa,CAACwB,UAAd","sourcesContent":["import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n//import { ConnectedRouter } from 'react-router-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import setAuthorizationToken from './utils/setAuthorizationToken';\r\n//import { setCurrentUser } from './actions/authActions';\r\nimport jwt from 'jsonwebtoken';\r\n\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n// console.log('----history----',history);\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst initialState = window.initialReduxState;\r\nconst store = configureStore(history, initialState);\r\n\r\nif(localStorage.jwtToken) {\r\n    let token = localStorage.jwtToken;\r\n    let user = jwt.decode(token);\r\n    if (!Array.isArray(user.roles)) {\r\n        user.roles = Array.of(user.roles);\r\n    }\r\n    // setAuthorizationToken(token);\r\n    // store.dispatch(setCurrentUser(user));\r\n}\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        {/* <ConnectedRouter history={history}> */}\r\n            <App />\r\n        {/* </ConnectedRouter> */}\r\n    </Provider>, rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}