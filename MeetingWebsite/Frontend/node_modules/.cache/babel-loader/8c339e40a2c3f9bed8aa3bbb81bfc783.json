{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport update from 'immutability-helper';\nupdate.extend('$auto', function (value, object) {\n  return object ? update(object, value) : update({}, value);\n});\n\nupdate.set = function (obj, path, value) {\n  var pathMap = {};\n  var pathPointer = pathMap;\n  var pathArray = path.split('.');\n  pathArray.forEach(function (item, idx) {\n    if (idx === pathArray.length - 1) {\n      pathPointer['$auto'] = _defineProperty({}, item, {\n        $set: value\n      });\n    } else {\n      var temp = {};\n      pathPointer['$auto'] = _defineProperty({}, item, temp);\n      pathPointer = temp;\n    }\n  });\n  return update(obj, pathMap);\n};\n\nexport default update;","map":{"version":3,"sources":["C:/Users/User/Desktop/SiteMeeting/MeetingWebsite/MeetingWebsite/Frontend/src/helpers/update.js"],"names":["update","extend","value","object","set","obj","path","pathMap","pathPointer","pathArray","split","forEach","item","idx","length","$set","temp"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEAA,MAAM,CAACC,MAAP,CAAc,OAAd,EAAuB,UAACC,KAAD,EAAQC,MAAR;AAAA,SAAqBA,MAAD,GACxCH,MAAM,CAACG,MAAD,EAASD,KAAT,CADkC,GAExCF,MAAM,CAAC,EAAD,EAAKE,KAAL,CAFc;AAAA,CAAvB;;AAKAF,MAAM,CAACI,GAAP,GAAa,UAACC,GAAD,EAAMC,IAAN,EAAYJ,KAAZ,EAAsB;AAElC,MAAMK,OAAO,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAGD,OAAlB;AAEA,MAAME,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAlB;AAEAD,EAAAA,SAAS,CAACE,OAAV,CAAkB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAChC,QAAIA,GAAG,KAAKJ,SAAS,CAACK,MAAV,GAAmB,CAA/B,EAAkC;AACjCN,MAAAA,WAAW,CAAC,OAAD,CAAX,uBAA0BI,IAA1B,EAAiC;AAAEG,QAAAA,IAAI,EAAEb;AAAR,OAAjC;AACA,KAFD,MAGK;AACJ,UAAMc,IAAI,GAAG,EAAb;AACAR,MAAAA,WAAW,CAAC,OAAD,CAAX,uBAA0BI,IAA1B,EAAiCI,IAAjC;AACAR,MAAAA,WAAW,GAAGQ,IAAd;AACA;AACD,GATD;AAUA,SAAOhB,MAAM,CAACK,GAAD,EAAME,OAAN,CAAb;AACA,CAlBD;;AAoBA,eAAeP,MAAf","sourcesContent":["import update from 'immutability-helper';\r\n\r\nupdate.extend('$auto', (value, object) => ((object)\r\n\t? update(object, value)\r\n\t: update({}, value))\r\n);\r\n\r\nupdate.set = (obj, path, value) => {\r\n\r\n\tconst pathMap = {};\r\n\tlet pathPointer = pathMap;\r\n\r\n\tconst pathArray = path.split('.');\r\n\r\n\tpathArray.forEach((item, idx) => {\r\n\t\tif (idx === pathArray.length - 1) {\r\n\t\t\tpathPointer['$auto'] = { [item]: { $set: value } };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst temp = {};\r\n\t\t\tpathPointer['$auto'] = { [item]: temp };\r\n\t\t\tpathPointer = temp;\r\n\t\t}\r\n\t});\r\n\treturn update(obj, pathMap);\r\n};\r\n\r\nexport default update;\r\n"]},"metadata":{},"sourceType":"module"}