{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SiteMeeting\\\\MeetingWebsite\\\\MeetingWebsite\\\\Frontend\\\\src\\\\components\\\\admin\\\\Tables\\\\UserTable\\\\UserTable.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport get from \"lodash.get\";\nimport { push } from 'react-router-redux';\nimport * as getListActions from './reducer';\nimport EclipseWidget from '../../../eclipse';\nimport Select from 'react-select'; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Table, Row, Col, Container } from \"reactstrap\";\nvar optionsMonth = [{\n  value: '01',\n  label: 'Січень'\n}, {\n  value: '04',\n  label: 'Квітень'\n}];\nvar optionsYear = [{\n  value: '2019',\n  label: '2019р'\n}, {\n  value: '2020',\n  label: '2020р'\n}];\n\nvar Tables =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tables, _React$Component);\n\n  function Tables() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tables);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tables)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      tmp_month: {\n        value: '01',\n        label: 'Січень'\n      },\n      tmp_year: {\n        value: '2019',\n        label: '2019р'\n      }\n    };\n\n    _this.handleChange = function (name, selectValue) {\n      _this.setState(_defineProperty({}, name, selectValue), _this.filterSearchData);\n    };\n\n    _this.filterSearchData = function () {\n      var _this$state = _this.state,\n          tmp_month = _this$state.tmp_month,\n          tmp_year = _this$state.tmp_year;\n      var year = tmp_year.value;\n      var month = tmp_month.value;\n\n      _this.props.getUsersData({\n        year: year,\n        month: month\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var _this$state2 = _this.state,\n          tmp_month = _this$state2.tmp_month,\n          tmp_year = _this$state2.tmp_year;\n      var year = tmp_year.value;\n      var month = tmp_month.value;\n\n      _this.props.getUsersData({\n        year: year,\n        month: month\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tables, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          tmp_year = _this$state3.tmp_year,\n          tmp_month = _this$state3.tmp_month;\n      var _this$props = this.props,\n          listUsers = _this$props.listUsers,\n          isListLoading = _this$props.isListLoading;\n      console.log(\"---state--------------------------------\", this.state);\n      console.log(\"---props--------------------------------\", this.props);\n      return React.createElement(React.Fragment, null, isListLoading && React.createElement(EclipseWidget, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0456\\u0432\")), React.createElement(Col, {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: tmp_month,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"tmp_month\", e);\n        },\n        options: optionsMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: tmp_year,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"tmp_year\", e);\n        },\n        options: optionsYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\u041D\\u0456\\u043A\\u043D\\u0435\\u0439\\u043C\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u0457\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"\\u041C\\u0456\\u0441\\u0442\\u043E\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"))), React.createElement(\"tbody\", {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, listUsers.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, item.nickname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, item.registrdate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, item.city), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, item.status));\n      })))))))));\n    }\n  }]);\n\n  return Tables;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"State=======\", state);\n  return {\n    listUsers: get(state, \"userTable.list.data\"),\n    isListLoading: get(state, \"userTable.list.loading\")\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getUsersData: function getUsersData(filter) {\n      dispatch(getListActions.getUsersData(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tables);","map":{"version":3,"sources":["C:/Users/User/Desktop/SiteMeeting/MeetingWebsite/MeetingWebsite/Frontend/src/components/admin/Tables/UserTable/UserTable.js"],"names":["React","connect","get","push","getListActions","EclipseWidget","Select","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Container","optionsMonth","value","label","optionsYear","Tables","state","isLoading","tmp_month","tmp_year","handleChange","name","selectValue","setState","filterSearchData","year","month","props","getUsersData","componentDidMount","listUsers","isListLoading","console","log","e","map","item","id","nickname","registrdate","city","status","Component","mapStateToProps","mapDispatchToProps","dispatch","filter"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport get from \"lodash.get\";\r\nimport { push } from 'react-router-redux';\r\nimport * as getListActions from './reducer';\r\nimport EclipseWidget from '../../../eclipse';\r\nimport Select from 'react-select';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Container\r\n} from \"reactstrap\";\r\n\r\nconst optionsMonth = [\r\n  \r\n  { value: '01', label: 'Січень' },\r\n  { value: '04', label: 'Квітень' },\r\n];\r\n\r\nconst optionsYear = [\r\n  { value: '2019', label: '2019р' },\r\n  { value: '2020', label: '2020р' },\r\n];\r\n\r\n\r\n\r\nclass Tables extends React.Component {\r\n\r\n  state = {\r\n    isLoading: true,\r\n    tmp_month: { value: '01', label: 'Січень' },\r\n    tmp_year: { value: '2019', label: '2019р' },   \r\n  }\r\n\r\n  handleChange = (name, selectValue) => {\r\n    this.setState({ [name]: selectValue }, this.filterSearchData);\r\n  }\r\n\r\n  filterSearchData = () => {\r\n    const { tmp_month, tmp_year } = this.state;\r\n    let year = tmp_year.value;\r\n    let month = tmp_month.value;\r\n    this.props.getUsersData({ year, month });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { tmp_month, tmp_year } = this.state;\r\n    let year = tmp_year.value;\r\n    let month = tmp_month.value;\r\n    this.props.getUsersData({ year, month });\r\n  }\r\n\r\n  render() {\r\n    const { tmp_year, tmp_month } = this.state;\r\n    const { listUsers, isListLoading } = this.props;\r\n    console.log(\"---state--------------------------------\", this.state);\r\n    console.log(\"---props--------------------------------\", this.props);\r\n    return (\r\n      <>\r\n      {isListLoading && <EclipseWidget />}\r\n      <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                  <Col className=\"col-md-2\">\r\n                  <CardTitle tag=\"h4\">Таблиця користувачів</CardTitle>\r\n                  </Col>\r\n                  <Col className=\"col-md-2\">\r\n                      <Select\r\n                        value={tmp_month}\r\n                        onChange={(e) => this.handleChange(\"tmp_month\", e)}\r\n                        options={optionsMonth} />\r\n                    </Col>\r\n                    <Col className=\"col-md-2\">\r\n                      <Select\r\n                        value={tmp_year}\r\n                        onChange={(e) => this.handleChange(\"tmp_year\", e)}\r\n                        options={optionsYear} />\r\n                    </Col>\r\n                  </Row>                 \r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table className=\"tablesorter\" responsive>\r\n                    <thead className=\"text-primary\">\r\n                      <tr>\r\n                        <th>Нікнейм</th>\r\n                        <th>Дата реєстрації</th>\r\n                        <th>Місто</th>\r\n                        <th>Статус</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"align-items-center\">\r\n                    {\r\n                        listUsers.map(item => {\r\n                          return (<tr key={item.id}>\r\n                            {/* <th scope=\"row\">{counter++}</th> */}\r\n                            <td>{item.nickname}</td>\r\n                            <td>{item.registrdate}</td>\r\n                            <td>{item.city}</td>\r\n                            <td>{item.status}</td>\r\n                          </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"State=======\", state);\r\n  return {\r\n    listUsers: get(state, \"userTable.list.data\"),\r\n    isListLoading: get(state, \"userTable.list.loading\"),  \r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUsersData: filter => {\r\n      dispatch(getListActions.getUsersData(filter));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tables);\r\n\r\n"]},"metadata":{},"sourceType":"module"}